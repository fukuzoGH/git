--------------------------------
chap01
1-2
helloworld.html

<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8">
  <title>Hello World!</title>
</head>
<body>
<h1>ハローワールド!</h1>
</body>
</html>
--------------------------------
chap02
2-4
print_dot.php

<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8">
  <title>print()で値を表示する例</title>
</head>
<body>
<?php
$who = "田中";
$age = 35;
print $who . "さん。" . $age . "才";
?>
</body>
</html>
--------------------------------
chap02
2-4
print_r.php

<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8">
  <title>print_r()で配列とオブジェクトの値を確認する</title>
</head>
<body>
<?php
$colors = array("red", "blue", "green");
$now = new DateTime();
print_r($colors);
print_r($now);
?>
</body>
</html>
--------------------------------
chap02
2-4
var_dump_pre.php

<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8">
  <title>var_dump()をブラウザでも見やすく出力する</title>
</head>
<body>
<pre>
<?php
$colors = array("red", "blue", "green");
var_dump($colors);
?>
</pre>
</body>
</html>
--------------------------------
chap02
2-4
echo1.php

<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8">
  <title>echo</title>
</head>
<body>
<?php
echo "こんにちは";
echo "<br>";
echo("ありがとう");
?>
</body>
</html>
--------------------------------
chap02
2-4
echo2.php

<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8">
  <title>echoで複数の値を表示する例</title>
</head>
<body>
<?php
echo "こんにちは","<br>","ありがとう";
?>
</body>
</html>
--------------------------------
chap02
2-4
print.php

<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8">
  <title>print()で値を表示する例</title>
</head>
<body>
<?php
$msg = "ハローグッバイ";
print($msg);
?>
</body>
</html>
--------------------------------
chap02
2-4
var_dump.php

<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8">
  <title>var_dump()の出力</title>
</head>
<body>
<?php
$msg = "おはよう"; // 文字列
$colors = array("red", "blue", "green"); // 配列
$now = new DateTime(); // DateTimeオブジェクト
$tokuten = 45; // 整数
$isPass = ($tokuten>80); // 論理値
$userName; // 値なし
var_dump($msg);
var_dump($colors);
var_dump($now);
var_dump($tokuten);
var_dump($isPass);
var_dump($userName)
?>
</body>
</html>
--------------------------------
chap02
2-5
amari.php

<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8">
  <title>余り</title>
</head>
<body>
<?php
$ans = 11.6%4.1;
echo $ans;
?>
</body>
</html>
--------------------------------
chap02
2-5
assignment1.php

<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8">
  <title>変数に値を代入する</title>
</head>
<body>
<pre>
<?php
$a = 100;
$b = $a + 1;
var_dump($a);
var_dump($b);
?>
</pre>
</body>
</html>
--------------------------------
css
style.css

@charset "UTF-8";
div{
	margin: 1em;
}

li {
	list-style-type: none;
	margin-bottom: 1em;
}

ol > li {
	list-style-type: decimal;
	margin-bottom: 0;
}

a{
	color: #5e78c1;
	text-decoration: none;
}
a:hover{
	color: #b04188;
	text-decoration: underline;
}

.error {
	color: #FF0000;
}
--------------------------------
css
tablestyle.css

@charset "UTF-8";
table {
	margin: 2em;
	padding: 0;
	border-collapse: collapse;
}

thead {
	background-color: #7ac2ff;
	text-align: left;
}

tr *{
	padding: : 0.5em 1em 0.5em 1em;
	width: auto;
	text-align: left;
}

tbody tr *:first-child{
	width: 3em;
}

tbody tr *:nth-child(2){
	width: 8em;
}

tbody tr *:nth-child(3){
	width: 4em;
}

tbody tr *:nth-child(4){
	width: 3em;
}

tbody tr *:nth-child(5){
	width: 3em;
	text-align: right;
}

tbody tr:nth-child(even) td {
	background-color: #dff0ff;
}
--------------------------------
css
tablestyle2.css

@charset "UTF-8";
table {
	margin: 2em;
	padding: 0;
	border-collapse: collapse;
}

thead {
	background-color: #7ac2ff;
	text-align: left;
}

tr *{
	padding: : 0.5em 1em 0.5em 1em;
	width: auto;
	text-align: left;
}

tbody tr *:first-child{
	width: 4em;
}

tbody tr *:nth-child(2){
	width: 12em;
}

tbody tr *:nth-child(3){
	width: 5em;
}

tbody tr *:nth-child(4){
	width: 8em;
}

tbody tr *:nth-child(5){
	width: 4em;
	text-align: right;
}

tbody tr:nth-child(even) td {
	background-color: #dff0ff;
}
--------------------------------
lib
util.php

<?php
// XSS対策のためのHTMLエスケープ
function es(array|string $data, string $charset='UTF-8'):mixed {
  // $dataが配列のとき
  if (is_array($data)){
    // 再帰呼び出し
    return array_map(__METHOD__, $data);
  } else {
    // HTMLエスケープを行う
    return htmlspecialchars(string:$data, flags:ENT_QUOTES, encoding:$charset);
  }
}

// 配列の文字エンコードのチェックを行う
function cken(array $data):bool{
  $result = true;
  foreach ($data as $key => $value) {
    if (is_array($value)){
      // 含まれている値が配列のとき文字列に連結する
      $value = implode("", $value);
    }
    if (!mb_check_encoding($value)){
      // 文字エンコードが一致しないとき
      $result = false;
      // foreachでの走査をブレイクする
      break;
    }
  }
  return $result;
}
// ?>
--------------------------------

